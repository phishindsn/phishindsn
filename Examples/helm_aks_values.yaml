 datadog:
  apiKey: <DATADOG_API_KEY>
  appKey: <DATADOG_APP_KEY>
  # If not using secrets, then use apiKey and appKey instead
  # apiKeyExistingSecret: <DATADOG_API_KEY_SECRET>
  # appKeyExistingSecret: <DATADOG_APP_KEY_SECRET>
  dd_url: us3.datadoghq.com
  clusterName: <cluster name>
  kubeStateMetricsEnabled: false
  kubeStateMetricsCore:
    enabled: true  
  env: []
  #   - name: <ENV_VAR_NAME>
  #     value: <ENV_VAR_VALUE>
  # - name: DD_CONTAINER_EXCLUDE
  #            value: "kube_namespace:*"
  #         - name: DD_CONTAINER_INCLUDE
  #           value: "kube_namespace:<DESIRED_NAMESPACE>"

  # kubelet configuration
  kubelet:
    tlsVerify:  false

  processAgent:
    processCollection: true

  logs:
    enabled: true
    containerCollectAll: true

  networkMonitoring:
    enabled: true

  apm:
    portEnabled: true
    socketPath: /var/run/datadog/apm.socket
    hostSocketPath: /var/run/datadog/

  systemProbe:
    enableTCPQueueLength: false
    enableOOMKill: true
    collectDNSStats: false

  securityAgent:
    compliance:
      enabled: false       
    runtime:
      enabled: false
      fimEnabled: false           

  clusterAgent:
    tokenExistingSecret: datadog
    # clusterAgent.replicas -- Specify the of cluster agent replicas, if > 1 it allow the cluster agent to work in HA mode.
    replicas: 1
